// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id               String            @id @default(cuid())
  name             String?
  email            String?           @unique
  emailVerified    DateTime?
  image            String?
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  accounts         Account[]
  sessions         Session[]
  pipelineSessions PipelineSession[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Gene {
  id            String         @id @default(cuid())
  gene_symbol   String
  synonyms      String
  description   String?
  genesets      GeneSet[]
  cfde_genesets cfdegeneset[]
  addedGeneset  addedGeneset[]

  @@map("genes")
}

model GeneSet {
  id           String          @id @default(cuid())
  name         String
  description  String?
  session      PipelineSession @relation(fields: [session_id], references: [id], onDelete: Cascade)
  session_id   String
  genes        Gene[]
  createdAt    DateTime        @default(now())
  isHumanGenes Boolean          @default(true)
  otherSymbols String[]         @default([])

  @@map("gene_lists")
}

model PipelineSession {
  id           String    @id @default(cuid())
  creator      User      @relation(fields: [user_id], references: [id])
  user_id      String
  createdAt    DateTime  @default(now())
  lastModified DateTime  @default(now())
  gene_sets    GeneSet[]
  session_name String?
  private      Boolean   @default(true)

  @@map("user_sessions")
}

model CFDECrossPair {
  id         String   @id @default(cuid())
  lib_1      String
  lib_2      String
  geneset_1  String
  geneset_2  String
  odds_ratio Float
  pvalue     Float
  n_overlap  Int
  overlap    String[]
  n_genes1   Int
  n_genes2   Int

  @@unique([lib_1, lib_2, geneset_1, geneset_2])
  @@map("cfde_cross_pair")
}

model LibAbstracts {
  id       String @id @default(cuid())
  lib      String
  abstract String

  @@unique([lib])
  @@map("lib_abstracts")
}

model cfdegeneset {
  id          String  @id @default(cuid())
  term        String
  library     String
  description String?
  genes       Gene[]

  @@unique([term, library])
  @@map("cfde_genesets")
}

model addedGeneset {
  id          String   @id @default(uuid())
  name        String
  description String?
  genes       Gene[]
  createdAt   DateTime @default(now())

  @@map("added_genesets")
}

model paperContacts {
  id            String @id @default(uuid())
  pmcid         String
  article_title String
  surname       String
  given_name    String
  email         String

  @@unique([pmcid, email])
  @@map("paper_contacts")
}
